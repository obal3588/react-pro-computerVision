{"version":3,"sources":["logo.svg","pages/Home.js","pages/aboutme/CommentCol.js","pages/aboutme/CommentsList.js","pages/AboutMe.js","ObjectDetectionSketch.js","pages/computerVision/ComputerV.js","pages/ComputerVision.js","pages/Errors.js","pages/faceAPI/Uploadfile.js","pages/faceAPI/ImageHistory.js","pages/FaceAPI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","$","removeClass","addClass","ListGroup","Item","React","Component","CommentCol","props","handleClick","e","preventDefault","newComment","state","handleChange","setState","target","name","value","comment","Col","Form","Group","controlId","Label","Control","type","placeholder","onChange","this","as","rows","Button","onClick","variant","CommentsList","console","log","deleteComment","index","CardColumns","Card","style","width","Body","Title","card","Text","AboutMe","allComments","commentsArr","map","Container","Row","md","span","offset","CardGroup","clearComments","MODEL_URL","sketch","p","capture","cocossdModel","cocoDrawings","faceDrawings","showCocoSSDResults","results","showFaceDetectionData","data","setup","a","faceapi","createCanvas","constraints","video","mandatory","minWidth","minHeight","optional","maxFrameRate","audio","createCapture","id","size","hide","cocoSsd","then","model","catch","draw","background","image","fill","drawing","textSize","strokeWeight","textX","bbox","textY","confidenetext","score","toFixed","textWidth","itemTextWidth","class","text","stroke","rect","detection","box","_x","_width","_y","_height","confidencetext","gender","agetext","age","ageTextWidth","copiedExpression","expressions","Object","keys","key","max","Math","expressiontext","filter","expressionWidth","withAgeAndGender","withFaceExpressions","loadedmetadata","detect","document","getElementById","ComputerV","objectDetectionSketch","ComputerVision","stopVideo","Errors","FaceAPI","event","obj","temp","file1","files","reader","FileReader","params","returnFaceId","returnFaceLandmarks","returnFaceAttributes","temparr","onload","src","result","postRec","XMLHttpRequest","url","param","open","setRequestHeader","send","onreadystatechange","response","readyState","status","JSON","parse","responseText","oleft","offsetLeft","otop","offsetTop","fc","createElement","fet","forEach","faceRec","points","left","faceRectangle","top","height","border","position","append","faceLandmarks","eyeLeftBottom","x","color","push","faceId","faceAttributes","readAsDataURL","newImage","className","aria-describedby","htmlFor","ImageHistory","handler","clearImages","all","images","item","y","face","n","z","callAdd","d","Tabs","defaultActiveKey","Tab","eventKey","title","Uploadfile","App","comments","basename","to","exact","path","component","ComputerVison","paht","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3712aa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\nimport $ from \"jquery\";\nimport { ListGroup } from \"react-bootstrap\";\n\nclass Home extends React.Component {\n\n\n  render() {\n \n    $(\"#AboutMe\").removeClass(\"active\");\n    $(\"#ComputerVision\").removeClass(\"active\");\n    $(\"#Home\").addClass(\"active\")\n    return(\n\n     \n<ListGroup>\n  <br></br>\n<h4>computer Vision </h4>\n<ListGroup.Item> @tensorflow-models/coco-ssd</ListGroup.Item>\n      <ListGroup.Item> tensorflow/tfjs-converter</ListGroup.Item>\n      <ListGroup.Item> tensorflow/tfjs-core</ListGroup.Item>\n      <ListGroup.Item> face-api.js</ListGroup.Item>\n      <ListGroup.Item> p5</ListGroup.Item>\n      <ListGroup.Item> react-p5-wrapper</ListGroup.Item>\n<h4>Microsoft Azure Face API </h4> \n\n\n</ListGroup>\n    )\n    \n\n  }\n}\nexport default Home","// return the comment colom \nimport React, { Component } from 'react'\n\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\n\n\n\n\n\n\n\nexport class CommentCol extends Component {\n\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n          name: \"\",\n          comment: \"\"\n        };\n      }\n    \n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.newComment(this.state);\n      };\n    \n      handleChange =(e)=>{      \n        this.setState({\n            [e.target.name]:e.target.value,\n        })\n    }\n\n\n    render() {\n        return (\n            <Col>\n            <Form>\n            <Form.Group controlId=\"nameId\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"name\" onChange ={this.handleChange} name=\"name\" />\n            </Form.Group>\n    \n            <Form.Group controlId=\"commentId\">\n              <Form.Label>Comments</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"3\" onChange ={this.handleChange} name=\"comment\" />\n            </Form.Group>\n            <Button onClick={this.handleClick} variant=\"primary\">\n            Done </Button>\n          </Form>\n          </Col>\n          \n         \n  \n        );\n    }\n}\n\nexport default CommentCol\n","\n// import React from \"react\"\n// import { CardColumns,Card,Button} from \"react-bootstrap\";\n\n// const handleClick=(e)=>{\n//     e.stopPropagation()\n//     console.log(e);\n// }\n// const CommentsList = (props) => {\n   \n    \n//     return (\n//         <CardColumns >\n//         <Card style={{ width: '18rem' }}>\n//         <Card.Body  >\n//         <Card.Title>{props.card.name}</Card.Title>\n//         <Card.Text>\n//         {props.card.comment}\n//         </Card.Text>\n      \n//         </Card.Body>\n//         <Button variant=\"primary\" key={props.deleteComment}  >Delete</Button>\n//         </Card>\n        \n//         </CardColumns>\n//     );\n\n// }\n\n// export default CommentsList;\n\n\nimport React, { Component } from 'react'\n import { CardColumns,Card,Button} from \"react-bootstrap\";\n import $ from \"jquery\";\nexport class CommentsList extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.state={\n        index:this.props.index\n    }\n};\n\n handleClick=(e)=>{\n   \n    console.log(e)\nthis.props.deleteComment(12)\n}\n    render() {\n        console.log(this.state.index)\n        return (\n        <CardColumns >\n        <Card style={{ width: '18rem' }}>\n        <Card.Body  >\n        <Card.Title>{this.props.card.name}</Card.Title>\n        <Card.Text>\n        {this.props.card.comment}\n        </Card.Text>\n      \n        </Card.Body>\n        <Button  onClick={this.handleClick(this.props.index)}  >Delete</Button>\n        </Card>\n         \n        </CardColumns>\n        )\n    }\n}\n\nexport default CommentsList\n\n\n","import React from \"react\";\nimport { Row, Col, Container, Form, Button, CardGroup } from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport CommentCol from \"./aboutme/CommentCol\";\nimport CommentsList from \"./aboutme/CommentsList\";\n\nclass AboutMe extends React.Component {\n  render() {\n    $(\"#Home\").removeClass(\"active\");\n    $(\"#ComputerVision\").removeClass(\"active\");\n    $(\"#AboutMe\").addClass(\"active\");\n    const allComments = this.props.commentsArr.map((comment, index) => {\n      return (<CommentsList card={comment} index={index} deleteComment={this.props.deleteComment}/>\n        );\n    });\n  \n\n    return (\n      <Container>\n        <Row>\n          <Col></Col>\n          <Col  md={{ span: 4, offset: 8 }}>write comment</Col>\n        </Row>\n        <Row>\n          <Col></Col>\n          <Col></Col>\n\n          <CommentCol newComment={this.props.newComment} />\n        </Row>\n        <Row>\n          <Col md={{ span: 4, offset: 8 }}>\n            <CardGroup>{allComments}</CardGroup>\n            <Button variant=\"outline-primary\" onClick={this.props.clearComments}>Delete All</Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default AboutMe;\n","import * as p5 from 'p5'\nimport \"p5/lib/addons/p5.dom\";\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\nimport * as faceapi from 'face-api.js';\n\nconst MODEL_URL = '/models'\n\nexport default function sketch (p) {\n\n    let capture = null;\n    let cocossdModel = null;\n\n    let cocoDrawings = [];\n    let faceDrawings = [];\n\n\n    function showCocoSSDResults(results) {\n        cocoDrawings = results;\n    }\n\n    function showFaceDetectionData(data) {\n        faceDrawings = data;\n    }\n\n    p.setup = async function () {\n        \n        await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n        await faceapi.loadAgeGenderModel(MODEL_URL);\n        await faceapi.loadFaceExpressionModel(MODEL_URL);\n\n        p.createCanvas(1280/2, 720/2);\n        const constraints = {\n            video: {\n              mandatory: {\n                minWidth: 1280/2,\n                minHeight: 720/2\n              },\n              optional: [{ maxFrameRate: 80 }]\n            },\n            audio: false\n          };\n\n        capture = p.createCapture(constraints, () => {\n        });\n\n        \n        capture.id(\"video_element\");\n        capture.size(1280/2, 720/2);\n        capture.hide();\n\n        cocoSsd.load().then((model) => {\n            try {\n                cocossdModel = model;\n            } catch(e) {\n                console.log(e);\n            }\n            \n        }).catch((e) => {\n            console.log(\"Error occured : \", e);\n        });\n        \n    };\n  \n    p.draw = async () => {\n        if (!capture) {\n            return;\n        }\n        p.background(255);\n        p.image(capture, 0, 0);      \n        p.fill(0,0,0,0);\n\n        cocoDrawings.map((drawing) => {\n            if (drawing) {\n                p.textSize(10);\n                p.strokeWeight(1);\n                const textX = drawing.bbox[0]+drawing.bbox[2];\n                const textY = drawing.bbox[1]+drawing.bbox[3];\n                \n                const confidenetext = \"Confidence: \"+ drawing.score.toFixed(1);\n                const textWidth = p.textWidth(confidenetext);\n                \n                const itemTextWidth = p.textWidth(drawing.class);\n                p.text(drawing.class, textX-itemTextWidth-5, textY-40);\n\n                p.text(confidenetext, textX-textWidth-5, textY-5);\n                p.strokeWeight(4);\n                p.stroke('rgb(100%,100%,100%)');\n                p.rect(drawing.bbox[0]/1.5, drawing.bbox[1]/1.5, drawing.bbox[2], drawing.bbox[3]);\n            }\n        });\n\n        faceDrawings.map((drawing) => {\n            if (drawing) {\n                p.textSize(15);\n                p.strokeWeight(1);\n\n                const textX = drawing.detection.box._x+drawing.detection.box._width;\n                const textY = drawing.detection.box._y+drawing.detection.box._height;\n                \n                const confidencetext = \"Gender: \"+ drawing.gender;\n                const textWidth = p.textWidth(confidencetext);\n                p.text(confidencetext, textX-textWidth-10, textY-60);\n\n\n                const agetext = \"Age: \"+ drawing.age.toFixed(0);\n                const ageTextWidth = p.textWidth(agetext);\n                p.text(agetext, textX-ageTextWidth-10, textY-30);\n\n                const copiedExpression = drawing.expressions;\n                const expressions = Object.keys(copiedExpression).map((key) => {\n                    const value = copiedExpression[key];\n                    return value;\n                })\n\n                const max = Math.max(...expressions);\n                \n                const expression_value = Object.keys(copiedExpression).filter((key) => {\n                    return copiedExpression[key] === max; \n                })[0];\n\n                const expressiontext = \"Mood: \"+ expression_value;\n                const expressionWidth = p.textWidth(expressiontext);\n                p.text(expressiontext, textX-expressionWidth-10, textY-10);\n                \n                p.strokeWeight(4);\n                p.stroke('rgb(100%,100%,100%)');\n                p.rect(drawing.detection.box._x, drawing.detection.box._y, drawing.detection.box._width, drawing.detection.box._height);\n            }\n        });\n        faceapi.detectAllFaces(capture.id()).withAgeAndGender().withFaceExpressions().then((data) => {\n            showFaceDetectionData(data);\n        });\n\n        if(capture.loadedmetadata) {\n            if (cocossdModel) {\n                cocossdModel\n                .detect(document.getElementById(\"video_element\"))\n                .then(showCocoSSDResults)\n                .catch((e) => {\n                    console.log(\"Exception : \", e);\n                });\n            }\n        }\n    }\n  };","import React from 'react';\nimport objectDetectionSketch from '../../ObjectDetectionSketch';\nimport P5Wrapper from 'react-p5-wrapper';\n\nexport default class ComputerV extends React.Component {\n      constructor(props){\n        super(props);\n  \n      }\n  render() {\n   \n      return (\n        <P5Wrapper sketch={objectDetectionSketch} />\n      )\n    }\n}\n\n","import React from \"react\";\nimport $ from \"jquery\";\nimport ComputerV from \"./computerVision/ComputerV\";\nimport { Row, Col, Container, Form, Button, CardGroup } from \"react-bootstrap\";\n\nclass ComputerVision extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stopVideo: false\n    };\n  }\n\n  render() {\n    $(\"#Home\").removeClass(\"active\");\n    $(\"#AboutMe\").removeClass(\"active\");\n    $(\"#ComputerVision\").addClass(\"active\");\n    return (\n      <Container>\n         <h1>ComputerVision</h1>{\" \"}\n        <Row>\n          <Col>\n            {\" \"}\n           \n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ComputerV stopVideo={this.state.stopVideo} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default ComputerVision;\n","import React from 'react'\n\n\nclass Errors extends React.Component {\n  render() {\n    return (<h1>Errors404</h1>)\n  }\n}\nexport default Errors","import React, { Component } from \"react\";\nimport { Row, Col, Container, Form, Button, CardGroup } from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport { file } from \"@babel/types\";\n\nexport class FaceAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    \n  }\n\n  handleClick = event => {\n    const temp =this;\n    const file1 = event.target.files[0];\n    let reader = new FileReader();\n    const subscriptionKey = \"d56a00a55f9c44c9a0372880cfa969da\";\n\n    const uriBase =\n      \"https://reconface.cognitiveservices.azure.com/face/v1.0/detect\";\n\n    // Request parameters.\n    const params = {\n      returnFaceId: \"true\",\n      returnFaceLandmarks: \"true\",\n      returnFaceAttributes:\n        \"age,gender,headPose,smile,facialHair,glasses,emotion,\" +\n        \"hair,makeup,occlusion,accessories,blur,exposure,noise\"\n    };\n    let obj;\n    let temparr=[];\n\n    reader.onload = event => {\n      console.log(\"ss\", event);\n      document.getElementById(\"imgx\").src = event.target.result;\n\n      var postRec = new XMLHttpRequest();\n      var url =\n        \"https://reconface.cognitiveservices.azure.com/face/v1.0/detect?\" +\n        $.param(params);\n      postRec.open(\"POST\", url, true);\n\n      postRec.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n      postRec.setRequestHeader(\n        \"Ocp-Apim-Subscription-Key\",\n        \"d56a00a55f9c44c9a0372880cfa969da\"\n      );\n\n      postRec.send(file1);\n      postRec.onreadystatechange = function(response) {\n        if (this.readyState == 4 && this.status == 200) {\n           obj = JSON.parse(this.responseText);\n          \n          \n\n          var oleft = document.getElementById(\"imgx\").offsetLeft;\n          var otop = document.getElementById(\"imgx\").offsetTop;\n          var faceRec = document.createElement(\"div\");\n\n          var fc = document.getElementById(\"face\");\n          var fet = document.getElementById(\"features\");\n\n          console.log(obj);\n          obj.forEach(obj => {\n            var faceRec = document.createElement(\"div\");\n            var points = document.createElement(\"span\");\n            faceRec.style.left = oleft + obj.faceRectangle.left + \"px\";\n            faceRec.style.top = otop + obj.faceRectangle.top + \"px\";\n            faceRec.style.width = obj.faceRectangle.width + \"px\";\n            faceRec.style.height = obj.faceRectangle.height + \"px\";\n            faceRec.style.border = \"2px solid purple\";\n            faceRec.style.position = \"absolute\";\n            faceRec.id = \"faceRec\";\n            fc.append(faceRec);\n            points.style.left =\n              oleft + obj.faceLandmarks.eyeLeftBottom.x + \"px\";\n            points.style.top = otop + obj.faceLandmarks.eyeLeftBottom.x + \"px\";\n            faceRec.append(points);\n            fet.style.color = \"black\";\n            temparr.push([obj.faceId ,obj.faceAttributes.gender ,obj.faceAttributes.age])\n     \n         \n\n          });\n\n          \n        }\n      };\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n    temp.props.newImage(temparr);\n  };\n\n  render() {\n    return (\n      <div className=\"input-group \">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\n            Upload\n          </span>\n        </div>\n        <div className=\"custom-file\">\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"inputGroupFile01\"\n            aria-describedby=\"inputGroupFileAddon01\"\n            onChange={this.handleClick}\n          />\n          <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n            Choose file\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FaceAPI;\n","\n\nimport React, { Component } from 'react'\nimport Info from \"./Info\"\n\n\nexport class ImageHistory extends Component {\nhandler=()=>{\n  this.props.clearImages();\n}\n\n  \n  render() {\n    // <Info item={item} />\n\n\n    const all =this.props.images.map((item,key)=>{\n      const temp=item.map((x,y)=>{\n           const face= x.map((n,z)=>{\n              return <li>{n}</li>\n\n            })\n            return <ul>{face}</ul>\n        })\n      return <li>{temp}</li>\n    })\nconsole.log(\"t\",this.props.images)\n    return (\n      <div>\n        <ul>\n       {all}\n       </ul>\n       <button onClick={this.handler}> clear</button>\n      </div>\n     \n    )\n  }\n}\n\nexport default ImageHistory\n","import React, { Component } from 'react'\nimport Uploadfile from \"./faceAPI/Uploadfile\"\nimport { Tabs,Tab,Row, Col, Container, Form, Button, CardGroup } from \"react-bootstrap\";\nimport { MDBContainer, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\nimport ImageHistory from \"./faceAPI/ImageHistory\"\nexport class FaceAPI extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n\n    callAdd=(d)=>{\n        console.log(\"call\")\n        this.props.newImage(d)\n    }\n\n    render() {\n        return (\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"upload\" title=\"Upload\">\n            <Container className=\"justify-content-right\">\n            <Row>\n                <div id=\"upload\">\n                <Uploadfile newImage={this.callAdd} images={this.props.images}/>\n                </div>\n              \n            </Row>\n            <Row>\n                \n                <div id=\"getFaceDetails\">\n                <img id=\"imgx\" class=\"img-fluid\" />\n                <div id=\"face\"></div>\n                <ul id=\"features\" class=\"collection\"></ul>\n                </div>\n           \n            </Row>\n          </Container>\n            </Tab>\n            <Tab eventKey=\"profile\" title=\"History\">\n             {/* <ImageHistory list={this.props.images}/> */}\n            </Tab>\n            \n          </Tabs>\n        )\n    }\n}\n\nexport default FaceAPI\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as style from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport { Route, Link, Switch, BrowserRouter as HashRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home.js\";\nimport AboutMe from \"./pages/AboutMe.js\";\nimport ComputerVison from \"./pages/ComputerVision.js\";\nimport Errors from \"./pages/Errors.js\";\nimport FaceAPI from \"./pages/FaceAPI\"\nimport ImageHistory from \"./pages/faceAPI/ImageHistory\"\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      images:[]\n    };\n  }\n\n  newComment = data => {\n    console.log(data);\n    this.setState({\n      comments: [data, ...this.state.comments]\n    })\n    \n  };\n\n\n  newImage = data => {\n    console.log(\"aa\",data);\n    this.setState({\n      images: [data, ...this.state.images]\n    })\n\n    console.log(\"newimag\",this.state.images)\n  };\n\n  clearComments = () => {\n    console.log(\"comment is clear\")\n    this.setState({\n      comments: []\n    })\n\n    console.log(\"comment is clear\")\n  };\n\n  clearImages = () => {\n    \n    this.setState({\n      images: []\n    })\n\n    console.log(\"comment is clear\")\n  };\n\n  deleteComment=(index)=>{\n    console.log(index)\n    // this.setState({\n    //   comments: this.state.comments.splice(index,1)\n    // })\n    \n\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\" id=\"mainBar\">\n              <Link to=\"/\" className=\"nav-item nav-link \" id=\"Home\">\n                Home{\" \"}\n              </Link>\n              <Link to=\"/aboutme\" className=\"nav-item nav-link\" id=\"AboutMe\">\n                About{\" \"}\n              </Link>\n              <Link\n                to=\"/computervision\"\n                className=\"nav-item nav-link \"\n                id=\"ComputerVision\"\n              >\n                Computer Vsion{\" \"}\n              </Link>\n              <Link\n                to=\"/faceapi\"\n                className=\"nav-item nav-link \"\n                id=\"FaceAPI\"\n              >\n                FaceAPI{\" \"}\n              </Link>\n              <Link\n                to=\"/history\"\n                className=\"nav-item nav-link \"\n                id=\"history\"\n              >\n                History{\" \"}\n              </Link>\n            </div>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            path=\"/aboutme\"\n            component={() => (\n              <AboutMe\n                newComment={this.newComment}\n                commentsArr ={this.state.comments}\n                clearComments={this.clearComments}\n                deleteComment={this.deleteComment}\n              />\n            )}\n          />\n          <Route path=\"/computervision\" component={ComputerVison} />\n          <Route path=\"/faceapi\"  component={()=> (\n            <FaceAPI\n             newImage={this.newImage} \n             images={this.state.images} \n             />\n             )}/>\n               <Route paht=\"/history\" \n               component={()=> (\n                <ImageHistory\n                 \n                 images={this.state.images} \n                 clearImages={this.clearImages}\n                 />\n                 )}/>\n          <Route component={Errors} />\n        </Switch>\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}